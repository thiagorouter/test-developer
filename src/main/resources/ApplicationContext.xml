<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

    <context:annotation-config/>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- INIT SCAN SPRING COMPONENTS -->
    <context:component-scan base-package="br.netshoes" scoped-proxy="targetClass"/>

    <!-- INIT REST COMPONENTS -->
    <context:component-scan base-package="br.netshoes.rest" scoped-proxy="targetClass"/>

    <bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper"/>

    <!-- SPRING SECURITY SETUP -->

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <constructor-arg value="ThisIsASecretSoChangeMe"/>
    </bean>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="jpaUsuarioDAO">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http
            realm="Protected API"
            use-expressions="true"
            auto-config="false"
            create-session="stateless"
            entry-point-ref="unauthorizedEntryPoint"
            authentication-manager-ref="authenticationManager">
        <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER"/>
        <security:intercept-url pattern="/rest/usuario/authenticate" access="permitAll"/>
        <security:intercept-url method="GET" pattern="/rest/logradouro/cep/**" access="permitAll"/>
        <security:intercept-url method="POST" pattern="/rest/usuario/**" access="hasRole('admin')"/>
        <security:intercept-url method="POST" pattern="/cadastro/usuario/**" access="hasRole('admin')"/>
    </security:http>

    <bean id="unauthorizedEntryPoint" class="br.netshoes.rest.UnauthorizedEntryPoint"/>

    <bean class="br.netshoes.rest.filter.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
        <constructor-arg ref="jpaUsuarioDAO"/>
    </bean>

    <!-- DATABASE SETUP -->

    <jdbc:initialize-database data-source="dataSource" enabled="true">
        <jdbc:script encoding="utf-8" execution="INIT" separator=";" location="classpath:sql/populate_logradouro_guarulhos_tipo_rua.sql"/>
    </jdbc:initialize-database>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="username" value="sa"/>
        <property name="password" value=""/>
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:mem:netshoesTest"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceUnitName" value="netshoesPU"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true"/>
                <property name="showSql" value="true"/>
            </bean>

        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="dataBaseInitializer" depends-on="" class="br.netshoes.service.commons.DataBaseInitializer" init-method="initDataBase"/>

</beans>
